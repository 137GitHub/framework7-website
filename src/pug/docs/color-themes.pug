extends ../_docs-template

block vars
  - var title = 'Color Themes | Framework7 Documentation';

block content
  -
    var colors = {
      red: '#ff3b30',
      green: '#4cd964',
      blue: '#2196f3',
      pink: '#ff2d55',
      yellow: '#ffcc00',
      orange: '#ff9500',
      purple: '#9c27b0',
      deeppurple: '#673ab7',
      lightblue: '#5ac8fa',
      teal: '#009688',
      lime: '#cddc39',
      deeporange: '#ff6b22',
      gray: '#8e8e93',
      white: '#ffffff',
      black: '#000000',
    };

  include ../_docs-demo-device

  .docs-nav
    include ../_docs-menu
  .docs-content
    +improveDocsLink
    h1 Color Themes
    ul.docs-index
    .with-device(data-device-preview="../docs-demos/core/color-themes.html")
      h2 Default Theme Color
      p Default theme color is set to the following:
      p #[b #007aff]
      div.color-example(style=`background-color: #007aff`)

      h2 Colors
      p Framework7 comes with 15 ready to use additional color themes.
      table
        tbody
          each color, key in colors
            tr
              td
                b=key
              td
                div.color-example(style=`background-color: ${color}`)
                div
                  b=color

      h2 Apply Color Themes
      p It is easy to apply color themes. All you need is just to add <code>color-theme-[color]</code> class to the required parent element. It could be body, app root, view, page, navbar, toolbar, list-block, etc. For example:
      :code(lang="html")
           &lt;body class="color-theme-red"&gt;
               ...
           &lt;/body&gt;

           &lt;div class="page color-theme-green"&gt;
               ...
           &lt;/div&gt;

           &lt;div class="list-block color-theme-pink"&gt;
               ...
           &lt;/div&gt;

           &lt;div class="navbar color-theme-orange"&gt;
               ...
           &lt;/div&gt;

           &lt;div class="segmented color-theme-yellow"&gt;
               ...
           &lt;/div&gt;
      .important-note
        p Note, that applied color theme affects only interractive elements such as links, buttons, form elements, icons. It doesn't change basic text color or background colors on other blocks.
      h2 Dark Theme
      p Framework7 also has additional dark theme layout. To apply dark theme we need to add <code>theme-dark</code> class to the required parent element. It could be body, app root, view, page, navbar, toolbar, list-block, etc. For example:
      :code(lang="html")
           &lt;html class="theme-dark"&gt;
               ...
           &lt;/html&gt;

           &lt;body class="theme-dark"&gt;
               ...
           &lt;/body&gt;

           &lt;div class="page theme-dark"&gt;
               ...
           &lt;/div&gt;

           &lt;div class="list-block theme-dark"&gt;
               ...
           &lt;/div&gt;

    h2 Helper Classes
    p There are also additional helper classes that could be used without/outside color themes:
    ul
      li
        p <code>color-[color]</code> - if you want to change color of individual button, link or icon, for example:
        :code(lang="html")
              &lt;a class="button color-red"&gt;Red button&lt;/a&gt;
      li
        p <code>text-color-[color]</code> - if you want to change text color of required element:
        :code(lang="html")
              &lt;p class="text-color-red"&gt;Red color text&lt;/p&gt;
      li
        p <code>bg-color-[color]</code> - if you want quickly to set predefined background color on some block or element:
        :code(lang="html")
              &lt;span class="badge bg-color-pink"&gt;14&lt;/span&gt; - pink badge
      li
        p <code>border-color-[color]</code> - if you want to set predefined border color:
        :code(lang="html")
              &lt;div class="button border-color-red"&gt;...&lt;/div&gt;
    p And of course, you can mix these helper classes:
    :code(lang="html")
      &lt;a class="button bg-color-blue text-color-white border-color-gray"&gt;...&lt;/a&gt;

    h2 Primary Color Classes
    p Helper classes support additional <code>primary</code> color which is equal to context color theme.
    ul
      li
        p <code>text-color-primary</code> - to change text color of element to theme color.
      li
        p <code>bg-color-primary</code> - to change background color of element to theme color.
      li
        p <code>border-color-primary</code> - to change border color of element to theme color.

    h2 Custom Color Theme
    p To set custom color theme, we need to specify few CSS variables:
    ul
      li #[code --f7-theme-color] — HEX value of theme color.
      li #[code --f7-theme-color-shade] — 8% darken theme color. Required, for example, for pressed buttons state.
      li #[code --f7-theme-color-tint] — 8% lighten theme color. Required, for example, for pressed buttons state.
      li #[code --f7-theme-color-rgb] — RGB value of theme color. Required for semitransparent elements.
    p For example, if custom theme color is #f00 (red), we just need to add following variables to our CSS:
    :code(lang="css")
      :root {
        --f7-theme-color: #f00;
        --f7-theme-color-shade: #d60000;
        --f7-theme-color-tint: #ff2929;
        --f7-theme-color-rgb: 255, 0, 0;
      }
    p There is also new #[a(href="utils.html#colorthemecssproperties") colorThemeCSSProperties] util that can generate required CSS variables:
    :code(lang="js")
      /* Generate CSS variables for red theme color */
      app.utils.colorThemeCSSProperties('#f00');
    p It will return the following object:
    :code(lang="js")
      {
        "--f7-theme-color": "#f00",
        "--f7-theme-color-rgb": "255, 0, 0",
        "--f7-theme-color-shade": "#d60000",
        "--f7-theme-color-tint": "#ff2929"
      }

    h2 CSS Variables
    p You can find list of all color-related CSS variables on #[a(href="css-variables.html") CSS Variables] reference page

